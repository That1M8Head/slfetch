#!/usr/bin/env bash

# slfetch - super-simple no-BS fetch tool
# written by Arsalan Kazmi

# First, check if the OS is macOS
if [ "$(uname -s)" == "Darwin" ]; then
    osname=$(sw_vers | cut -d':' -f2- | head -n 1 | xargs)
    osversion=$(sw_vers -productVersion | cut -d':' -f2- | head -n 1 | xargs)
# Otherwise, check if it's Windows
elif [[ "$(uname -s)" == *NT* ]]; then
    osname="Windows"
    osversion=$(wmic os get Caption | awk -F "Microsoft Windows " 'NR==2{print $2}' | awk '{$1=$1};1')
# Otherwise, check if it's Linux
elif [ -f /etc/os-release ]; then
    osname=$(< /etc/os-release grep -w NAME | head -1 | sed 's/NAME=//g' | sed 's/\"//g' | sed 's/ Linux//g')
    osversion=$(< /etc/os-release grep -w VERSION | head -1 | sed 's/VERSION=//g' | sed 's/\"//g')
# Otherwise, just use uname -o
elif ! uname -s; then
    osname=$(uname -o)
    osversion="unknown"
# If that failed for some reason, just assume it's unknown
else
    osname="unknown"
    osversion="none"
fi

# If osversion was set to a blank value, reset it to unknown
if [ "$osversion" == "" ]; then
	osversion="unknown"
fi

# If there's no editor registered, add a placeholder
if [ -n "$EDITOR" ]; then
    EDNAME="$EDITOR"
else
    EDNAME="no editor at all"
fi

jokes="Oh! Nice computer you got here! Can I have it?
There's probably some RAM installed.
$SHELL likely exists.
What? Were you expecting ASCII art?
You probably have enough free space.
I'd just like to interject for a moment.\nWhat you're referring to as $osname is in fact GNU/$osname.
Hopefully there's a CPU in here somewhere.
Imagine using $EDNAME.
There is no neo in this fetch.
It's probably a computer.
$osname, $osname never changes.
It can probably run DOOM.
$EDNAME, man! !man $EDNAME"

if [ "$osname" != "Windows" ]; then
    jokes="${jokes}
init is probably running.
Go on. Post to r/unixporn. I dare you.
rootfs is probably mounted."
fi

if [ "$(uname -s)" == "Darwin" ]; then
    jokes="${jokes}
Pfft. Mac users.
Think different? No, I don't think I will.
I Want to Buy a Computer - Now What?
Just a couple of us Macs having fun!"
fi

# If you get those last two references you're a legend

if [[ "$osname" == "Windows" ]]; then
    jokes="${jokes}
C:\ is probably mounted.
Why the hell are you using bash on Windows?
Heh. Michaelsoft Binbows.
Your computer has a virus! It's called Windows.
How long until your next scheduled update?
:("
fi

if [[ "$(uname -r)" == *WSL* ]]; then
    jokes="${jokes}
This system is sus...
There's a Subsystem among us!
You were nothing but a usurper. A false idol.
I suppose it's better than cmd.exe..."
fi

# Randomly choose a joke from the above list
joke=$(echo "$jokes" | shuf -n 1)
echo -e "\n\033[1m$joke\033[0m"

# The meat of the script
# We use newlines here to make it a little neater
if [ $osname != "unknown" ]; then
    echo -e "> You're running \033[1m$osname\033[0m, version \033[1m$osversion\033[0m."
else
    echo -e "> I have \033[1mno clue\033[0m what OS your system is running."
fi
echo -e "> Your kernel is \033[1m$(uname -s)\033[0m, version \033[1m$(uname -r)\033[0m."
echo -e "> Your machine type is \033[1m$(uname -m)\033[0m.\n"
